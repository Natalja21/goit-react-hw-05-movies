{"version":3,"file":"static/js/167.1f082203.chunk.js","mappings":"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","sources":["Servis/Api.jsx","components/MoviesList/MovieList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","components/BtnLoadMore/LoadMore.styled.js","components/BtnLoadMore/BtnLoadMore.jsx","pages/Movies.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'd7d9ab2863712e08ff43c2cdf6d8066a';\nconst URL = 'https://api.themoviedb.org/3';\n\nconst defaultParams = {\n  api_key: API_KEY,\n};\n\nconst moviesApiClient = axios.create({\n  baseURL: URL,\n  params: defaultParams,\n});\n\nexport const getPopularMovies = async () => {\n  const { data } = await moviesApiClient.get('/trending/movie/day');\n  return data;\n};\nexport const getSerchMovies = async (query, page) => {\n  const { data } = await moviesApiClient.get('/search/movie', {\n    params: { query, page },\n  });\n  return data;\n};\nexport const getDetailsMovies = async id => {\n  const { data } = await moviesApiClient.get(`movie/${id}`);\n  return data;\n};\nexport const getCastMovies = async id => {\n  const { data } = await moviesApiClient.get(`/movie/${id}/credits`);\n  return data;\n};\nexport const getRewiesMovies = async id => {\n  const { data } = await moviesApiClient.get(`\n/movie/${id}/reviews`);\n  return data;\n};\n\nexport const IMG_URL = 'https://image.tmdb.org/t/p/original';\n","import styled from 'styled-components';\n\nexport const MoviesListStyled = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\n  margin-right: -30px;\n`;\nexport const MovieItemStyled = styled.li`\n  flex-basis: calc(100% / 5 - 30px);\n  background: transparent ;\n  box-shadow: 0 6px 18px rgb(0 0 0 / 10%);\n  margin-right: 30px;\n  margin-bottom: 30px;\n  border-radius: 5px;\n  list-style: none;\n  :hover {\n      transform: scale(1.02);\n        cursor: pointer;\n        box-shadow: 0px 0px 59px -17px rgba(255, 107, 1, 1), inset 0px 0px 24px -9px rgba(84, 84, 84, 0.5);\n      color: brown;\n    }\n  \n\n  .linkItem {\n    width: 100%;\n    display: inline-block;\n    text-decoration: none;\n    color: black;  \n  }\n\n  .img {\n    padding: 0;\n    margin: 0;\n    height: 100%;\n    width: 100%;\n    display: block;\n    border-top-left-radius: 10px;\n    border-top-right-radius: 10px;\n  }\n  .text {\n    margin: 10px;\n    font-weight: 700;\n    font-size: 15px;\n    line-height: 1.2;\n    text-align: center;\n    letter-spacing: 0.03em;\n    text-transform: uppercase;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { IMG_URL } from 'Servis/Api';\nimport PropTypes from 'prop-types';\nimport { MoviesListStyled, MovieItemStyled } from './MovieList.styled';\nimport img from '../../img/camera-2008489_640.png'\n\nconst MoviesList = ({ filmList }) => {\n  const location = useLocation();\n\n\n  return (\n    <MoviesListStyled>\n      {filmList.map(({ name, title, id, poster_path}) => (\n        <MovieItemStyled key={id}>\n          <Link className='linkItem' to={`/movies/${id}`} state={{ from: location }}>\n            <img className='img'\n              src={\n                poster_path\n                  ? `${IMG_URL}/${poster_path}`\n                  : `${img}`\n              }\n              alt={title ? title : name}\n             \n            />\n            <p className='text'>{title ? title : name}</p>\n          </Link>\n        </MovieItemStyled>\n      ))}\n    </MoviesListStyled>\n  );\n};\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  filmList : PropTypes.array,\n}","import styled from 'styled-components';\nexport const SearchForm = styled.form`\n  margin: 30px auto;\n  display: flex;\n  justify-content: center;\n  border: 2px solid orange;\n  border-radius: 10px;\n  width: 400px;\n  box-shadow: 0px 0px 59px -17px rgba(255, 107, 1, 1),\n    inset 0px 0px 24px -9px rgba(84, 84, 84, 0.5);\n\n  & > input {\n    padding: 8px;\n    width: 100%;\n    border: none;\n    outline: none;\n    color: orange;\n    background: transparent;\n    :hover,\n    :focus {\n      color: black;\n    }\n  }\n  & > button {\n    border: none;\n    background: transparent;\n    color: orange;\n    :hover {\n      color: black;\n    }\n  }\n`;\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { SearchForm } from './SearchBar.styled';\n\nconst SearchBar = (props) => {\n const [query, setQuery] = useState('');\n\n  const handelQueryChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n  const handelSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '' ) {\n      toast.warning('Please, enter query !', {\n        theme: 'colored',\n          closeOnClick: true,\n        \n      });\n      return;\n    }\n    props.onSubmitSearchBar(query);\n\n    setQuery('');\n  };\n     return (\n    <div>\n      <SearchForm onSubmit={handelSubmit} >\n        <input \n          name=\"query\"\n          type=\"text\"\n          autoComplete=\"off\"\n          value={query}\n          autoFocus\n          placeholder=\"Search movies\"\n          onChange={handelQueryChange}\n        />\n        <button type=\"submit\" >\n          <span>Search</span>\n        </button>\n      </SearchForm>\n    </div>\n  );\n}\nexport default SearchBar","import styled from 'styled-components';\nexport const BtnBox = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nexport const Btn = styled.button`\n  background-color: transparent;\n  padding: 10px 12px;\n  width: 400px;\n  font-weight: 900;\n  font-size: 16px;\n  line-height: 1.87;\n  align-items: center;\n  margin: 10px 0;\n  border: 2px solid orange;\n  border-radius: 10px;\n  box-shadow: 0px 0px 59px -17px rgba(255, 107, 1, 1),\n    inset 0px 0px 24px -9px rgba(84, 84, 84, 0.5);\n  color: orange;\n  :hover {\n    color: black;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {BtnBox, Btn } from './LoadMore.styled';\nconst BtnLoadMore = ({ type, text, onLoading }) => (\n  <BtnBox>\n    <Btn type={type} onClick={() => onLoading()}>\n      {text}\n    </Btn>\n  </BtnBox>\n);\nexport default BtnLoadMore;\n\nBtnLoadMore.prototype = {\n  type: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  onLoading: PropTypes.func.isRequired,\n};\n","import SearchBar from '../components/SearchBar/SearchBar';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { getSerchMovies } from 'Servis/Api';\nimport BtnLoadMore from 'components/BtnLoadMore/BtnLoadMore';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n   const [searchParams, setSearchParams] = useSearchParams();\n  const [page, setPage] = useState(1);\n  const [invisible, setInvisible] = useState(false);\n\n  useEffect(() => {\n     const query = searchParams.get('query')\n    if (query === '') {\n      setInvisible(true);\n      return;\n    }\n    const fechSerchMovies = async () => {\n      setInvisible(true);\n      try {\n        const { results, total_results, total_pages } = await getSerchMovies(\n         query,\n          page\n        );\n        if (total_results === 0) {\n          toast.warning(\n            `Sorry, there are no movies matching search query \"${query}\". Please try again.`,\n            {\n              theme: 'colored',\n              closeOnClick: true,\n            }\n          );\n          setMovies([]);\n        }\n        setMovies(prev => [...prev,...results]);\n\n        if (page < total_pages) {\n         setInvisible(false);\n        }\n        \n      } catch (error) {\n        const errorMessage = toast.warning(\n          'Oops, something went wrong try again later!',\n          {\n            theme: 'colored',\n            closeOnClick: true,\n          }\n        );\n        return errorMessage;\n      }\n    };\n    fechSerchMovies();\n  }, [searchParams, page]);\n\n  const handleSubmitSearchBar = query => {\n     setSearchParams({ query});\n      setMovies([]);\n  };\n  const onLoadingMore = () => {\n    setPage(prev => prev + 1);\n  };\n\n  return (\n    <main >\n      <div className=\"container\">\n      <SearchBar onSubmitSearchBar={handleSubmitSearchBar} />\n      { movies.length > 0 && <MoviesList filmList={movies} />}\n      { movies.length > 0 && !invisible && (\n        <BtnLoadMore type=\"button\" text=\"Load More\" onLoading={onLoadingMore} />\n        )}\n        </div>\n    </main>\n  );\n};\nexport default Movies;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["defaultParams","api_key","moviesApiClient","axios","baseURL","params","getPopularMovies","get","data","getSerchMovies","query","page","getDetailsMovies","id","getCastMovies","getRewiesMovies","IMG_URL","MoviesListStyled","styled","MovieItemStyled","filmList","location","useLocation","map","name","title","poster_path","className","to","state","from","src","img","alt","SearchForm","props","useState","setQuery","onSubmit","e","preventDefault","trim","onSubmitSearchBar","toast","theme","closeOnClick","type","autoComplete","value","autoFocus","placeholder","onChange","currentTarget","toLowerCase","BtnBox","Btn","BtnLoadMore","text","onLoading","onClick","prototype","PropTypes","movies","setMovies","useSearchParams","searchParams","setSearchParams","setPage","invisible","setInvisible","useEffect","fechSerchMovies","results","total_results","total_pages","prev","errorMessage","length","MoviesList","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}