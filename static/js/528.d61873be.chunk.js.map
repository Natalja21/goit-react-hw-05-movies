{"version":3,"file":"static/js/528.d61873be.chunk.js","mappings":"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","sources":["Servis/Api.jsx","components/MoviesList/MovieList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'd7d9ab2863712e08ff43c2cdf6d8066a';\nconst URL = 'https://api.themoviedb.org/3';\n\nconst defaultParams = {\n  api_key: API_KEY,\n};\n\nconst moviesApiClient = axios.create({\n  baseURL: URL,\n  params: defaultParams,\n});\n\nexport const getPopularMovies = async () => {\n  const { data } = await moviesApiClient.get('/trending/movie/day');\n  return data;\n};\nexport const getSerchMovies = async (query) => {\n  const { data } = await moviesApiClient.get('/search/movie', {\n    params: { query},\n  });\n  return data;\n};\nexport const getDetailsMovies = async id => {\n  const { data } = await moviesApiClient.get(`movie/${id}`);\n  return data;\n};\nexport const getCastMovies = async id => {\n  const { data } = await moviesApiClient.get(`/movie/${id}/credits`);\n  return data;\n};\nexport const getRewiesMovies = async id => {\n  const { data } = await moviesApiClient.get(`\n/movie/${id}/reviews`);\n  return data;\n};\n\nexport const IMG_URL = 'https://image.tmdb.org/t/p/original';\n","import styled from 'styled-components';\n\nexport const MoviesListStyled = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\n  margin-right: -30px;\n`;\nexport const MovieItemStyled = styled.li`\n  flex-basis: calc(100% / 5 - 30px);\n  background: transparent ;\n  box-shadow: 0 6px 18px rgb(0 0 0 / 10%);\n  margin-right: 30px;\n  margin-bottom: 30px;\n  border-radius: 5px;\n  list-style: none;\n  :hover {\n      transform: scale(1.02);\n        cursor: pointer;\n        box-shadow: 0px 0px 59px -17px rgba(255, 107, 1, 1), inset 0px 0px 24px -9px rgba(84, 84, 84, 0.5);\n      color: brown;\n    }\n  \n\n  .linkItem {\n    width: 100%;\n    display: inline-block;\n    text-decoration: none;\n    color: black;  \n  }\n\n  .img {\n    padding: 0;\n    margin: 0;\n    height: 100%;\n    width: 100%;\n    display: block;\n    border-top-left-radius: 10px;\n    border-top-right-radius: 10px;\n  }\n  .text {\n    margin: 10px;\n    font-weight: 700;\n    font-size: 15px;\n    line-height: 1.2;\n    text-align: center;\n    letter-spacing: 0.03em;\n    text-transform: uppercase;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { IMG_URL } from 'Servis/Api';\nimport PropTypes from 'prop-types';\nimport { MoviesListStyled, MovieItemStyled } from './MovieList.styled';\nimport img from '../../img/camera-2008489_640.png'\n\nconst MoviesList = ({ filmList }) => {\n  const location = useLocation();\n\n\n  return (\n    <MoviesListStyled>\n      {filmList.map(({ name, title, id, poster_path}) => (\n        <MovieItemStyled key={id}>\n          <Link className='linkItem' to={`/movies/${id}`} state={{ from: location }}>\n            <img className='img'\n              src={\n                poster_path\n                  ? `${IMG_URL}/${poster_path}`\n                  : `${img}`\n              }\n              alt={title ? title : name}\n             \n            />\n            <p className='text'>{title ? title : name}</p>\n          </Link>\n        </MovieItemStyled>\n      ))}\n    </MoviesListStyled>\n  );\n};\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  filmList : PropTypes.array,\n}","import styled from 'styled-components';\nexport const SearchForm = styled.form`\n  margin: 30px auto;\n  display: flex;\n  justify-content: center;\n  border: 2px solid orange;\n  border-radius: 10px;\n  width: 400px;\n  box-shadow: 0px 0px 59px -17px rgba(255, 107, 1, 1),\n    inset 0px 0px 24px -9px rgba(84, 84, 84, 0.5);\n\n  & > input {\n    padding: 8px;\n    width: 100%;\n    border: none;\n    outline: none;\n    color: orange;\n    background: transparent;\n    :hover,\n    :focus {\n      color: black;\n    }\n  }\n  & > button {\n    border: none;\n    background: transparent;\n    color: orange;\n    :hover {\n      color: black;\n    }\n  }\n`;\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { SearchForm } from './SearchBar.styled';\n\nconst SearchBar = (props) => {\n const [query, setQuery] = useState('');\n\n  const handelQueryChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n  const handelSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '' ) {\n      toast.warning('Please, enter query !', {\n        theme: 'colored',\n          closeOnClick: true,\n        \n      });\n      return;\n    }\n    props.onSubmitSearchBar(query);\n    setQuery('');\n  };\n     return (\n    <div>\n      <SearchForm onSubmit={handelSubmit} >\n        <input \n          name=\"query\"\n          type=\"text\"\n          autoComplete=\"off\"\n          value={query}\n          autoFocus\n          placeholder=\"Search movies\"\n          onChange={handelQueryChange}\n        />\n        <button type=\"submit\" >\n          <span>Search</span>\n        </button>\n      </SearchForm>\n    </div>\n  );\n}\nexport default SearchBar","import SearchBar from '../components/SearchBar/SearchBar';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { getSerchMovies } from 'Servis/Api';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    const fechSerchMovies = async () => {\n      try {\n        const { results, total_results } = await getSerchMovies(query);\n        if (total_results === 0) {\n          toast.warning(\n            `Sorry, there are no movies matching search query \"${query}\". Please try again.`,\n            {\n              theme: 'colored',\n              closeOnClick: true,\n            }\n          );\n          setMovies([]);\n        }\n        setMovies(results);\n      } catch (error) {\n        const errorMessage = toast.warning(\n          'Oops, something went wrong try again later!',\n          {\n            theme: 'colored',\n            closeOnClick: true,\n          }\n        );\n        return errorMessage;\n      }\n    };\n    fechSerchMovies();\n  }, [query]);\n\n  const handleSubmitSearchBar = value => {\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <main>\n      <div className=\"container\">\n        <SearchBar onSubmitSearchBar={handleSubmitSearchBar} />\n        {movies.length > 0 && <MoviesList filmList={movies} />}\n      </div>\n    </main>\n  );\n};\nexport default Movies;\n"],"names":["defaultParams","api_key","moviesApiClient","axios","baseURL","params","getPopularMovies","get","data","getSerchMovies","query","getDetailsMovies","id","getCastMovies","getRewiesMovies","IMG_URL","MoviesListStyled","styled","MovieItemStyled","filmList","location","useLocation","map","name","title","poster_path","className","to","state","from","src","img","alt","SearchForm","props","useState","setQuery","onSubmit","e","preventDefault","trim","onSubmitSearchBar","toast","theme","closeOnClick","type","autoComplete","value","autoFocus","placeholder","onChange","currentTarget","toLowerCase","movies","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","fechSerchMovies","results","total_results","errorMessage","length","MoviesList"],"sourceRoot":""}