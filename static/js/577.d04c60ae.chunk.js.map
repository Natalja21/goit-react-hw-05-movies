{"version":3,"file":"static/js/577.d04c60ae.chunk.js","mappings":"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","sources":["components/MoviesList/MovieList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","components/BtnLoadMore/BtnLoadMore.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesListStyled = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\n  margin-right: -40px;\n  \n`;\nexport const MovieItemStyled = styled.li`\n  flex-basis: calc(100% / 4 - 40px);\n  background: #fff;\n  box-shadow: 0 6px 18px rgb(0 0 0 / 10%);\n  max-width: 200px;\n  margin-right: 40px;\n  margin-bottom: 30px;\n  border-radius: 10px;\n  list-style: none;\n\n  .linkItem {\n    width: 100%;\n    display: inline-block;\n    text-decoration: none;\n    color: black;\n    &:hover {\n      cursor: pointer;\n      color: brown;\n    }\n  }\n\n  .img {\n    padding: 0;\n    margin: 0;\n    height: 260px;\n    width: 100%;\n    display: block;\n    border-top-left-radius: 10px;\n    border-top-right-radius: 10px;\n  }\n  .text {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 5px;\n    margin: 10px 0;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 1.19;\n    text-align: center;\n    letter-spacing: 0.03em;\n    text-transform: uppercase;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { IMG_URL } from 'Servis/Api';\nimport PropTypes from 'prop-types';\nimport { MoviesListStyled, MovieItemStyled } from './MovieList.styled';\n\nconst MoviesList = ({ filmList }) => {\n  const location = useLocation();\n  return (\n    <MoviesListStyled>\n      {filmList.map(({ name, title, id, poster_path }) => (\n        <MovieItemStyled key={id}>\n          <Link className='linkItem' to={`/movies/${id}`} state={{ from: location }}>\n            <img className='img'\n              src={\n                poster_path\n                  ? `${IMG_URL}/${poster_path}`\n                  : `https://assets.zoom.us/images/en-us/desktop/generic/video-not-working.PNG`\n              }\n              alt={title ? title : name}\n              width=\"200\"\n              height=\"200\"\n            />\n            <p className='text'>{title ? title : name}</p>\n          </Link>\n        </MovieItemStyled>\n      ))}\n    </MoviesListStyled>\n  );\n};\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  filmList : PropTypes.array,\n}","import styled from 'styled-components';\nexport const SearchForm = styled.form`\n  margin: 30px auto;\n  display: flex;\n  justify-content: center;\n  border: 2px solid #000;\n  border-radius: 5px;\n  width: 400px;\n\n  & > input {\n    padding: 8px;\n    width: 100%;\n    border: none;\n    outline: none;\n  }\n  & > button {\n     border: none;\n     background:transparent;\n \n  }\n`;\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { SearchForm } from './SearchBar.styled';\n\nconst SearchBar = (props) => {\n const [query, setQuery] = useState('');\n\n  const handelQueryChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n  const handelSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      toast.warning('Please, enter query !', {\n        theme: 'colored',\n          closeOnClick: true,\n        \n      });\n      return;\n    }\n    props.onSubmitSearchBar(query);\n\n    setQuery('');\n  };\n     return (\n    <div>\n      <SearchForm onSubmit={handelSubmit} >\n        <input \n          name=\"query\"\n          type=\"text\"\n          autoComplete=\"off\"\n          value={query}\n          autoFocus\n          placeholder=\"Search movies\"\n          onChange={handelQueryChange}\n        />\n        <button type=\"submit\" >\n          <span>Search</span>\n        </button>\n      </SearchForm>\n    </div>\n  );\n}\nexport default SearchBar","import PropTypes from 'prop-types';\n\nconst BtnLoadMore = ({ type, text, onLoading }) => (\n  <div>\n    <button type={type} onClick={() => onLoading()}>\n      {text}\n    </button>\n  </div>\n);\nexport default BtnLoadMore;\n\nBtnLoadMore.prototype = {\n  type: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  onLoading: PropTypes.func.isRequired,\n};\n","import SearchBar from '../components/SearchBar/SearchBar';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { getSerchMovies } from 'Servis/Api';\nimport BtnLoadMore from 'components/BtnLoadMore/BtnLoadMore';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [invisible, setInvisible] = useState(false);\n\n  useEffect(() => {\n    if (query === '') {\n      setInvisible(true);\n      return;\n    }\n    const fechSerchMovies = async () => {\n      setInvisible(true);\n      try {\n        const { results, total_results, total_pages } = await getSerchMovies(\n          query,\n          page\n        );\n        if (total_results === 0) {\n          toast.warning(\n            `Sorry, there are no movies matching search query \"${query}\". Please try again.`,\n            {\n              theme: 'colored',\n              closeOnClick: true,\n            }\n          );\n          setMovies([]);\n        }\n        setMovies(prev => [...prev,...results]);\n\n        if (page < total_pages) {\n         setInvisible(false);\n        }\n        \n      } catch (error) {\n        const errorMessage = toast.warning(\n          'Oops, something went wrong try again later!',\n          {\n            theme: 'colored',\n            closeOnClick: true,\n          }\n        );\n        return errorMessage;\n      }\n    };\n    fechSerchMovies();\n  }, [query, page]);\n\n  const handleSubmitSearchBar = newQuery => {\n    if (query !== newQuery) {\n      setQuery(prev => newQuery);\n      setMovies([]);\n    }\n  };\n  const onLoadingMore = () => {\n    setPage(prev => prev + 1);\n  };\n\n  return (\n    <main >\n      <div className=\"container\">\n      <SearchBar onSubmitSearchBar={handleSubmitSearchBar} />\n      { movies.length > 0 && <MoviesList filmList={movies} />}\n      { movies.length > 0 && !invisible && (\n        <BtnLoadMore type=\"button\" text=\"Load More\" onLoading={onLoadingMore} />\n        )}\n        </div>\n    </main>\n  );\n};\nexport default Movies;\n"],"names":["MoviesListStyled","styled","MovieItemStyled","filmList","location","useLocation","map","name","title","id","poster_path","className","to","state","from","src","IMG_URL","alt","width","height","SearchForm","props","useState","query","setQuery","onSubmit","e","preventDefault","trim","onSubmitSearchBar","toast","theme","closeOnClick","type","autoComplete","value","autoFocus","placeholder","onChange","currentTarget","toLowerCase","BtnLoadMore","text","onLoading","onClick","prototype","PropTypes","movies","setMovies","page","setPage","invisible","setInvisible","useEffect","fechSerchMovies","getSerchMovies","results","total_results","total_pages","prev","errorMessage","newQuery","length","MoviesList"],"sourceRoot":""}