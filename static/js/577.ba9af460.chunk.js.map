{"version":3,"file":"static/js/577.ba9af460.chunk.js","mappings":"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","sources":["Servis/Api.jsx","components/Cast/Cast.styled.js","components/Cast/CastItem.jsx","components/Cast/Cast.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'd7d9ab2863712e08ff43c2cdf6d8066a';\nconst URL = 'https://api.themoviedb.org/3';\n\nconst defaultParams = {\n  api_key: API_KEY,\n};\n\nconst moviesApiClient = axios.create({\n  baseURL: URL,\n  params: defaultParams,\n});\n\nexport const getPopularMovies = async () => {\n  const { data } = await moviesApiClient.get('/trending/movie/day');\n  return data;\n};\nexport const getSerchMovies = async (query) => {\n  const { data } = await moviesApiClient.get('/search/movie', {\n    params: { query},\n  });\n  return data;\n};\nexport const getDetailsMovies = async id => {\n  const { data } = await moviesApiClient.get(`movie/${id}`);\n  return data;\n};\nexport const getCastMovies = async id => {\n  const { data } = await moviesApiClient.get(`/movie/${id}/credits`);\n  return data;\n};\nexport const getRewiesMovies = async id => {\n  const { data } = await moviesApiClient.get(`\n/movie/${id}/reviews`);\n  return data;\n};\n\nexport const IMG_URL = 'https://image.tmdb.org/t/p/original';\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: -30px;\n`;\nexport const CastItemBox = styled.li`\n  flex-basis: calc(100% / 5 - 30px);\n  background: #fff;\n  box-shadow: 0 6px 18px rgb(0 0 0 / 10%);\n  margin-right: 30px;\n  margin-bottom: 30px;\n  border-radius: 5px;\n  list-style: none;\n  .img {\n    padding: 0;\n    margin: 0;\n    width: 100%;\n    height: 300px;\n    height: 300px;\n    display: block;\n    border-top-left-radius: 10px;\n    border-top-right-radius: 10px;\n  }\n  .text {\n    margin: 10px;\n    font-weight: 700;\n    font-size: 15px;\n    line-height: 1.13;\n    text-align: center;\n    letter-spacing: 0.03em;\n    text-transform: uppercase;\n    &--color {\n      color: orange;\n    }\n  }\n`;\n","import { IMG_URL } from 'Servis/Api';\nimport PropTypes from 'prop-types';\nimport { CastItemBox } from './Cast.styled';\nimport img from '../../img/camera-2008489_640.png'\nconst CastItem = ({ item }) => {\n  const { id, profile_path, name, character } = item;\n  return (\n    <CastItemBox key={id}>\n      <img className='img'\n        src={\n          profile_path\n            ? `${IMG_URL}/${profile_path}`\n            : `${img}`\n        }\n        alt={name}\n      />\n      \n      <p className='text text--color'>{name}</p>\n      <p className='text'>Character: {character}</p>\n    </CastItemBox>\n  );\n};\n\nexport default CastItem;\n\nCastItem.prototype = {\n  item: PropTypes.object,\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastMovies } from 'Servis/Api';\nimport { toast } from 'react-toastify';\nimport CastItem from './CastItem';\nimport PropTypes from 'prop-types';\nimport { CastList } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    const getActorsMovie = async () => {\n      try {\n        const data = await getCastMovies(movieId);\n        setCast(data.cast);\n      } catch (error) {\n        const errorMessage = toast.warning(\n          'Oops, something went wrong try again later!',\n          {\n            theme: 'colored',\n            closeOnClick: true,\n          }\n        );\n        return errorMessage;\n      }\n    };\n    getActorsMovie();\n  }, [movieId]);\n  if (!cast) {\n    return null;\n  }\n\n  return (\n    <section className='section'>\n      {cast.length > 0 ? (\n        <CastList>\n          {cast.map(item => (\n            <CastItem item={item} key={item.id} />\n          ))}\n        </CastList>\n      ) : (\n        <p>We don't have information of cast</p>\n      )}\n    </section>\n  );\n};\n\nexport default Cast;\n\nCast.prototype = {\n  cast: PropTypes.array.isRequired,\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["defaultParams","api_key","moviesApiClient","axios","baseURL","params","getPopularMovies","get","data","getSerchMovies","query","getDetailsMovies","id","getCastMovies","getRewiesMovies","IMG_URL","CastList","styled","CastItemBox","CastItem","item","profile_path","name","character","className","src","img","alt","prototype","PropTypes","Cast","movieId","useParams","useState","cast","setCast","useEffect","getActorsMovie","errorMessage","toast","theme","closeOnClick","length","map","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}